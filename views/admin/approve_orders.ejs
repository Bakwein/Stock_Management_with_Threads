<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../partials/head') %>
    <style>
        body {
            /* display: flex; */
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: #2A2B33;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <%- include('../partials/admin/nav') %>
    <div class="container mt-3">
         <div class="col-md-12 mt-3">
            <h3 style="color: #fff;"><strong>Threadlerin Öncelik Durumları</strong></h3>
            <canvas id="myChart" width="400" height="200"></canvas>
            <h3 style="color: #fff;"><strong>Onay Bekleyen Siparişler</strong></h3>
            <button class="btn btn-success" onclick="tumunuOnayla()">Tümünü Onayla</button>
            <div class="row">
                <div class="col-md-12 mt-3">
                    <% products.forEach(product => { %>
                        <div class="card mb-3">
                            <div class="card-body">
                                <h3 class="card-title
                                "><strong><%= product.ProductName %></strong></h5>
                                <p class="card-text">Stok: <%= product.Stock %></p>
                                <p class="card-text">Fiyat: <%= product.Price %></p>
                                <hr>
                                <% if (!orders.some(order => order.ProductIDR == product.ProductID)) { %>
                                    <p class="card-text">Bu ürün için onay bekleyen sipariş bulunmamaktadır.</p>
                                 
                                <% } else { %>
                                    <button class="btn btn-success" onclick="uruneGoreOnayla('<%= product.ProductID %>')">Onayla</button>
                                    <h6 class="mt-3">Bu ürün için onay bekleyen siparişler:</h6>                                     
                                    <% orders.forEach(order => { %>
                                        <% if (order.ProductIDR == product.ProductID) { %>
                                            <div class="col-md-3 mt-3" >
                                                <p class="card-text"><strong>ID:</strong> <%= order.OrderID %></p>
                                                <% customers.forEach(customer => { %>
                                                    <% if (customer.CustomerID == order.CustomerIDR) { %>
                                                        <p class="card-text"><strong>Müşteri:</strong> <%= customer.CustomerName %></p>
                                                        <p class="card-text"><strong>Müşteri Tipi:</strong> <%= customer.CustomerType %></p>
                                                    <% } %>
                                                <% }) %>
                                                <p class="card-text"><strong>Miktar:</strong> <%= order.Quantity %></p>
                                                <p class="card-text"><strong>Sipariş Tarihi:</strong> <%= order.OrderDate.getDate() %>-<%= (order.OrderDate.getMonth()+1) %>-<%= order.OrderDate.getFullYear() %> <%= order.OrderDate.getHours() %>:<%= order.OrderDate.getMinutes() %>:<%= order.OrderDate.getSeconds() %></p>
                                            </div> 
                                            <hr>                     
                                        <% } %>                                       
                                    <% }) %>    
                                <% } %>                                                          
                            </div>
                        </div>
                    <% }) %>
                </div>
            </div>
        </div>
        
        <script>
            document.addEventListener("DOMContentLoaded", async function () {
            /*const threads =  JSON.stringify(threads); // API'den veriyi al
            console.log(threads);

            const threadOrderIDs = threads
            .filter(thread => thread.orderId) 
            .map(thread => thread.orderId);
            console.log(threadOrderIDs);

            const threadOncelikSkoru = threads
            .filter(thread => thread.oncelikSkoru)
            .map(thread => thread.oncelikSkoru);
            console.log(threadOncelikSkoru);

            const backgroundColors = threadOncelikSkoru.map(stock => stock < 10 ? 'rgba(255, 99, 132, 0.2)' : 'rgba(75, 192, 192, 0.2)');
            const borderColors = threadOncelikSkoru.map(stock => stock < 10 ? 'rgba(255, 99, 132, 1)' : 'rgba(75, 192, 192, 1)');*/

            const ctx = document.getElementById('myChart').getContext('2d');
            const myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    //labels: threadOrderIDs, // Her ürün için bir etiket
                    labels: [],
                    datasets: [{
                        label: 'Öncelik Skoru',
                        //data: threadOncelikSkoru, // Veritabanından çekilen veriler
                        data: [],
                        //backgroundColor: backgroundColors,
                        //borderColor: borderColors,
                        backgroundColor: [],
                        borderColor: [],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
            setInterval(async function(){
                const response = await fetch('http://localhost:3001/api/threads', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                });
                const threads = await response.json();
                console.log(threads);

                const threadOrderIDs = threads
                .filter(thread => thread.orderId) 
                .map(thread => thread.orderId);
                console.log(threadOrderIDs);

                const threadOncelikSkoru = threads
                .filter(thread => thread.oncelikSkoru)
                .map(thread => thread.oncelikSkoru);
                console.log(threadOncelikSkoru);

                const backgroundColors = threadOncelikSkoru.map(stock => stock < 10 ? 'rgba(255, 99, 132, 0.2)' : 'rgba(75, 192, 192, 0.2)');
                const borderColors = threadOncelikSkoru.map(stock => stock < 10 ? 'rgba(255, 99, 132, 1)' : 'rgba(75, 192, 192, 1)');
                myChart.data.labels = threadOrderIDs;
                myChart.data.datasets[0].data = threadOncelikSkoru;
                myChart.data.datasets[0].backgroundColor = backgroundColors;
                myChart.data.datasets[0].borderColor = borderColors;
                myChart.update();
            }, 1000);
        });
        

        </script>
        <script>
            async function uruneGoreOnayla(productID) {
                console.log(productID);
            }


            async function tumunuOnayla() {
                console.log('Tümünü onayla butonuna tıklandı.');
            }



        </script>
    
</body>
</html>